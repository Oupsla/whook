// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`wrapHandlerWithAuthorization should fail with a mismatch between user and authenticated one 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "errorCode": "E_UNAUTHORIZED",
  "errorHeaders": undefined,
  "errorParams": Array [
    1,
    3,
  ],
  "httpCode": 403,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with access_token disabled 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_UNAUTHORIZED",
  "errorHeaders": Object {
    "www-authenticate": "Bearer realm=\\"Auth\\"",
  },
  "errorParams": Array [],
  "httpCode": 401,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
    Array [
      "debug",
      "üîê - No authorization found, locking access!",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with bad operation definition provided 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_MISCONFIGURATION",
  "errorHeaders": undefined,
  "errorParams": Array [
    "Bearer",
    Array [],
  ],
  "httpCode": 500,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with no authorization at all for secured endpoints 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_UNAUTHORIZED",
  "errorHeaders": Object {
    "www-authenticate": "Bearer realm=\\"Auth\\"",
  },
  "errorParams": Array [],
  "httpCode": 401,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
    Array [
      "debug",
      "üîê - No authorization found, locking access!",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with no operation definition provided 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_OPERATION_REQUIRED",
  "errorHeaders": undefined,
  "errorParams": Array [],
  "httpCode": 500,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with not supported auth 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_UNKNOWN_AUTH_MECHANISM",
  "errorHeaders": undefined,
  "errorParams": Array [
    "Whatever yolo",
  ],
  "httpCode": 400,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail with unallowed mechanisms 1`] = `
Object {
  "authenticationChecks": Array [],
  "errorCode": "E_UNALLOWED_AUTH_MECHANISM",
  "errorHeaders": undefined,
  "errorParams": Array [
    "Basic yolo",
  ],
  "httpCode": 400,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should fail without right scopes 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "errorCode": "E_UNAUTHORIZED",
  "errorHeaders": undefined,
  "errorParams": Array [
    Array [],
    Array [
      "user",
      "admin",
    ],
  ],
  "httpCode": 403,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization should proxy authentication errors 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "errorCode": "E_UNAUTHORIZED",
  "errorHeaders": Object {
    "www-authenticate": "Bearer realm=\\"Auth\\"",
  },
  "errorParams": Array [],
  "httpCode": 401,
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [],
}
`;

exports[`wrapHandlerWithAuthorization with authenticated and restricted endpoints should work with access tokens and good authentication check 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction] {
            "calls": Array [
              Array [
                "bearer",
                Object {
                  "hash": "yolo",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Promise {},
              },
            ],
          },
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "access_token": "yolo",
        "authenticated": true,
        "scopes": Array [
          "user",
          "admin",
        ],
        "userId": 1,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "security": Array [
          Object {
            "bearerAuth": Array [
              "user",
              "admin",
            ],
          },
        ],
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "headers": Object {
      "X-Authenticated": "{\\"userId\\":1,\\"scopes\\":[\\"user\\",\\"admin\\"]}",
    },
    "status": 200,
  },
}
`;

exports[`wrapHandlerWithAuthorization with authenticated and restricted endpoints should work with bearer tokens and good authentication check 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction] {
            "calls": Array [
              Array [
                "bearer",
                Object {
                  "hash": "yolo",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Promise {},
              },
            ],
          },
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "authenticated": true,
        "authorization": "Bearer yolo",
        "scopes": Array [
          "user",
          "admin",
        ],
        "userId": 1,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "security": Array [
          Object {
            "bearerAuth": Array [
              "user",
              "admin",
            ],
          },
        ],
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "headers": Object {
      "X-Authenticated": "{\\"userId\\":1,\\"scopes\\":[\\"user\\",\\"admin\\"]}",
    },
    "status": 200,
  },
}
`;

exports[`wrapHandlerWithAuthorization with authenticated but not restricted endpoints should work with access tokens and good authentication check 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction] {
            "calls": Array [
              Array [
                "bearer",
                Object {
                  "hash": "yolo",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Promise {},
              },
            ],
          },
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "access_token": "yolo",
        "authenticated": true,
        "scopes": Array [
          "user",
          "admin",
        ],
        "userId": 1,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "security": Array [
          Object {},
          Object {
            "bearerAuth": Array [
              "user",
              "admin",
            ],
          },
        ],
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "headers": Object {
      "X-Authenticated": "{\\"userId\\":1,\\"scopes\\":[\\"user\\",\\"admin\\"]}",
    },
    "status": 200,
  },
}
`;

exports[`wrapHandlerWithAuthorization with authenticated but not restricted endpoints should work with bearer tokens and good authentication check 1`] = `
Object {
  "authenticationChecks": Array [
    Array [
      "bearer",
      Object {
        "hash": "yolo",
      },
    ],
  ],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction] {
            "calls": Array [
              Array [
                "bearer",
                Object {
                  "hash": "yolo",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Promise {},
              },
            ],
          },
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "authenticated": true,
        "authorization": "Bearer yolo",
        "scopes": Array [
          "user",
          "admin",
        ],
        "userId": 1,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "security": Array [
          Object {},
          Object {
            "bearerAuth": Array [
              "user",
              "admin",
            ],
          },
        ],
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "headers": Object {
      "X-Authenticated": "{\\"userId\\":1,\\"scopes\\":[\\"user\\",\\"admin\\"]}",
    },
    "status": 200,
  },
}
`;

exports[`wrapHandlerWithAuthorization with authenticated but not restricted endpoints should work with no authentication at all 1`] = `
Object {
  "authenticationChecks": Array [],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
    Array [
      "debug",
      "üîì - Optionally authenticated enpoint detected, letting the call pass through!",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction],
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
            Array [
              "debug",
              "üîì - Optionally authenticated enpoint detected, letting the call pass through!",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "authenticated": false,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "security": Array [
          Object {},
          Object {
            "bearerAuth": Array [
              "user",
              "admin",
            ],
          },
        ],
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "status": 200,
  },
}
`;

exports[`wrapHandlerWithAuthorization with unauthenticated endpoints should work 1`] = `
Object {
  "authenticationChecks": Array [],
  "logCalls": Array [
    Array [
      "debug",
      "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
    ],
    Array [
      "debug",
      "üîì - Public endpoint detected, letting the call pass through!",
    ],
  ],
  "noopMockCalls": Array [
    Array [
      Object {
        "DEFAULT_MECHANISM": "Bearer",
        "MECHANISMS": Array [
          Object {
            "buildAuthorizationRest": [Function],
            "buildWWWAuthenticateRest": [Function],
            "parseAuthorizationRest": [Function],
            "parseWWWAuthenticateRest": [Function],
            "type": "Bearer",
          },
        ],
        "authentication": Object {
          "check": [MockFunction],
        },
        "log": [MockFunction] {
          "calls": Array [
            Array [
              "debug",
              "üîê - Initializing the authorization wrapper for \\"getNoop\\".",
            ],
            Array [
              "debug",
              "üîì - Public endpoint detected, letting the call pass through!",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      Object {
        "aParameter": 1,
        "authenticated": false,
      },
      Object {
        "consumes": Array [],
        "operationId": "noopHandler",
        "produces": Array [],
        "responses": Object {
          "200": Object {
            "description": "Sucessfully did nothing!",
          },
        },
        "summary": "Does nothing.",
        "tags": Array [
          "system",
        ],
      },
    ],
  ],
  "response": Object {
    "status": 200,
  },
}
`;
